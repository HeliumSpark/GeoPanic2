{{ define "head_insert" }}
{{ end }}
{{ define "content" }}

<div id="score-map" style="width: 100%; height: 50vh;"></div>

<div class="container">
    <div style="margin-top: 10%; text-align: center;">
	<p class="text-center">You were {{ .DistanceKM }}km from the correct position. Your marker is <img style="height: 40px;" src="/static/icons/question{{ .YourColor }}.png"/></p>
	<div class="progress" style="height: 40px;">
	      <div class="progress-bar" role="progressbar" style="width: {{ .PointsPercent }}%;" aria-valuenow="{{ .NumPoints }}" aria-valuemin="0" aria-valuemax="5000">{{ .NumPoints }}/5000 points</div>
	</div>
	<p class="text-muted">Reload the page to see other player's scores once they finish this round.</p>
	{{ if .LastScorePage }}
	<button type="button" class="btn btn-primary" onclick="window.location.href = '/summary'">Go to summary</button>
	{{ else }}
	<button type="button" class="btn btn-primary" onclick="window.location.href = '/continue'">Continue to next round</button>
	{{ end }}
    </div>
</div>

<script src="static/leaflet/leaflet.js"></script>
<script>
let map = L.map("score-map").setView([0.0, 0.0], 1);

let guessedPositions = [
{{ range $x, $value := .GuessedPositions }}
    ["{{ $value.Nickname }}", [{{ index $value.GuessedPosition 0}}, {{index $value.GuessedPosition 1}}], {{ $value.Color }}],
{{ end }}
]
let actualPosition = [{{ index .ActualPosition 0 }}, {{ index .ActualPosition 1 }}];

for (i in guessedPositions) {
    let polyline;
    polyline = L.polyline([guessedPositions[i][1], actualPosition], {color: '#007bff'}).addTo(map);
    map.fitBounds(polyline.getBounds());
}

let makeIcon = function(name) {
    return L.icon({
	iconUrl: "static/icons/" + name,
	iconSize: [50/2, 82/2],
	iconAnchor: [25/2, 82/2],
	shadowUrl: "static/leaflet/images/marker-shadow.png",
	shadowSize: [41, 41],
	shadowAnchor: [12, 41]
    });
};

for (i in guessedPositions) {
    L.marker(guessedPositions[i][1], {
	    title: guessedPositions[i][0],
	    icon: makeIcon("question" + guessedPositions[i][2] + ".png"),
    }).addTo(map).openPopup();
}
L.marker(actualPosition, {
	title: "Actual position",
	icon: makeIcon("answer.png"),
}).addTo(map).openPopup();

L.tileLayer("{{ .Config.TileServerURL }}", {
	attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OSM</a> contributors, <a href="https://wikitech.wikimedia.org/wiki/Wikitech:Cloud_Services_Terms_of_use">Wikimedia Cloud Servides</a>'
}).addTo(map);
</script>
<link rel="stylesheet" href="static/leaflet/leaflet.css"/>
{{ end }}
